<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="booksystem.dao.BorrowDao">

    <insert id="addBorrow" parameterType="booksystem.pojo.Borrow">
        insert into borrow(lend_id,username,start_time,end_time,bar_code,is_lend_again,`status`,is_borrow,update_time)
        values (MD5(UUID()),#{username},#{start_time},#{end_time},#{bar_code},0,#{status},#{is_borrow},now())
    </insert>

    <select id="getBorrowNumByUser" resultType="int">
        select COUNT(*) from borrow where `status` in (1,2,4) and username=#{username}
    </select>

    <select id="getById" resultType="Map">
        select * from borrow where  lend_id=#{lend_id}
    </select>

    <select id="getOvertimeBorrow" resultType="Map">
        select * from borrow where `status`=2 and username=#{username}
    </select>

    <select id="getNumByStatus" resultType="int">
        select count(*) from borrow where `status`=#{status}
    </select>

    <update id="updateStatus" >
        update borrow set is_borrow=#{is_borrow},`status`=#{status},update_time=now() where lend_id=#{lend_id}
    </update>

    <select id="getBorrowByBarCode" resultType="Map">
        select * from borrow where  `status` in (1,2) and bar_code=#{bar_code}
    </select>

    <select id="getReserveByBarCode" resultType="Map">
        select * from borrow where  `status`=4 and bar_code=#{bar_code}
    </select>

    <update id="renew">
        update borrow set is_lend_again=1,update_time=now(),end_time=DATE_ADD(end_time,interval 7 day)
        where bar_code=#{bar_code} and `status`=1
    </update>

    <delete id="deleteBorrow">
        delete from borrow where lend_id=#{lend_id}
    </delete>

    <select id="adminFuzzyQuery" resultType="java.util.HashMap">
        SELECT * FROM borrow where 1=1
        <choose>
            <when test="is_history==1">
                and status in (3,5)
            </when>
            <otherwise>
                and status in (1,2,4)
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==0">
                and (username like #{content} or bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where book_name like #{content})) or bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where isbn like #{content})) or bar_code like #{content})
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==1">
                and username like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where book_name like #{content}))
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where isbn like #{content}))
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==4">
                and bar_code like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0 order by update_time DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1 order by status DESC,update_time DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
        limit #{start},#{each_num}
    </select>

    <select id="adminFuzzyQueryCount" resultType="int">
        SELECT count(*) FROM borrow where 1=1
        <choose>
            <when test="is_history==1">
                and status in (3,5)
            </when>
            <otherwise>
                and status in (1,2,4)
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==0">
                and (username like #{content} or bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where book_name like #{content})) or bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where isbn like #{content})) or bar_code like #{content})
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==1">
                and username like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where book_name like #{content}))
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and bar_code in (select bar_code from bookitem where reference_num in
                (select reference_num from book where isbn like #{content}))
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==4">
                and bar_code like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="query" resultType="java.util.HashMap">
        SELECT * FROM borrow where 1=1
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by update_time DESC
        limit #{start},#{each_num}
    </select>

    <select id="queryCount" resultType="int">
        SELECT count(*) FROM borrow where 1=1
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="queryBorrowing" resultType="java.util.HashMap">
        SELECT * FROM borrow,bookitem,book where username=#{username} and borrow.bar_code=bookitem.bar_code and bookitem.reference_num=book.reference_num
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0 and borrow.status=4 order by end_time DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1 and borrow.status in (1,2) order by borrow.status desc ,end_time DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==2">
                and borrow.status in (1,2,4) order by borrow.status desc ,end_time DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="queryBorrowed" resultType="java.util.HashMap">
        SELECT * FROM borrow,bookitem,book where username=#{username} and borrow.bar_code=bookitem.bar_code and bookitem.reference_num=book.reference_num
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0 and borrow.status=5
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1 and borrow.status=3
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==2">
                and borrow.status in (3,5)
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by end_time DESC
        limit #{start},#{each_num}
    </select>

    <select id="queryBorrowedCount" resultType="int">
        SELECT count(*) FROM borrow,bookitem,book where username=#{username} and borrow.bar_code=bookitem.bar_code and bookitem.reference_num=book.reference_num
        <choose>
            <when test="borrow_reserve==0">
                and is_borrow=0 and borrow.status=5
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==1">
                and is_borrow=1 and borrow.status=3
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="borrow_reserve==2">
                and borrow.status in (3,5)
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>


</mapper>