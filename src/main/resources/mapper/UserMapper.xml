<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="booksystem.dao.UserDao">
    <select id="getAllUser" resultType="java.util.HashMap">
        select * from user
    </select>

    <select id="getUsers" resultType="java.util.HashMap">
        select * from user order by create_time DESC
            limit #{start},#{book_num}
    </select>

    <select id="getUsersCount" resultType="int">
        select count(*) from user
    </select>

    <select id="getAllUserNum" resultType="int">
        select count(*) from user
    </select>

    <select id="getUserByName" resultType="booksystem.pojo.User">
        select * from user where username=#{username}
     </select>


    <insert id="addUser">
        INSERT INTO user(username,password,`name`,id_card,age,gender,status,create_time,update_time,access_time)
        VALUES(#{username},#{password},#{name},#{id_card},#{age},#{gender},0,now(),now(),now());
    </insert>

    <update id="updateUser"  parameterType="booksystem.pojo.User">
        update user set password=#{password},name=#{name},age=#{age},gender=#{gender},update_time=now(),id_card=#{id_card} where username=#{username}
    </update>

    <update id="updateStatus" >
        update user set status=#{status} where username=#{username}
    </update>

    <update id="updateTime" >
        update user set update_time=now() where username=#{username}
    </update>

    <update id="deleteUser" parameterType="String">
        delete from user where username=#{username}
    </update>

    <update id="accessTime">
        update user set access_time=now() where username=#{username}
    </update>


    <select id="adminFuzzyQuery" resultType="java.util.HashMap">
        SELECT * FROM user where 1=1
        <choose>
            <when test="queryWhat==1">
                and name like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and id_card like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and username like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by create_time DESC
        limit #{start},#{each_num}
    </select>

    <select id="adminFuzzyQueryCount" resultType="int">
        SELECT count(*) FROM user where 1=1
        <choose>
            <when test="queryWhat==1">
                and name like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and id_card like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and username like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

</mapper>