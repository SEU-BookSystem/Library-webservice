<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="booksystem.dao.BookDao">

    <select id="getAllBook" resultType="booksystem.pojo.Book">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
            (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book ORDER  BY update_time DESC
    </select>

    <select id="getBorrowBook" parameterType="int" resultType="java.util.HashMap">
        SELECT reference_num,count(reference_num) as num from bookitem,borrow where bookitem.bar_code=borrow.bar_code
        and (year(now())*365+month(now())*30+day(now()))-(year(borrow.start_time)*365+month(borrow.start_time)*30+day(borrow.start_time))&lt;=#{day}
        group by reference_num order by num DESC
    </select>

    <select id="getHotBook" parameterType="int" resultType="java.util.HashMap">
        select *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
        (select category_name from category where category.category_id=book.category_id) as second_category
        from book where reference_num in (select reference_num from (SELECT reference_num,count(reference_num) as num from bookitem,borrow where bookitem.bar_code=borrow.bar_code
        group by reference_num order by num DESC) as T)
        <choose>
            <when test="category ==0">
                and LEFT(category_id,1) not in ('Z')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==1">
                and LEFT(category_id,1) in ('Z')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        limit 0,#{num};
    </select>

    <select id="getBookByName" parameterType="String" resultType="booksystem.pojo.Book">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
            (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where book_name=#{book_name} ORDER BY update_time DESC
    </select>

    <select id="getBookByPublisher" parameterType="String" resultType="booksystem.pojo.Book">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
            (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where publisher=#{publisher} ORDER BY update_time DESC
    </select>

    <select id="getBookByIsbn" parameterType="String" resultType="java.util.HashMap">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
            (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where isbn=#{isbn} ORDER BY update_time DESC
    </select>

    <select id="getBookImg" parameterType="String" resultType="String">
        SELECT image FROM book where reference_num=#{reference_num}
    </select>
<!--    <select id="getStatusNum" parameterType="int" resultType="int">-->
<!--        SELECT count(*) FROM bookitem where status=#{status}-->
<!--    </select>-->

    <select id="getBookByReferenceNum" parameterType="String" resultType="java.util.HashMap">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
            (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where reference_num=#{reference_num}
    </select>


    <update id="updateBook">
        update book set book_name=#{book_name},author=#{author},price=#{price},publisher=#{publisher},
                        page_num=#{page_num},detail=#{detail},image=#{image},`date`=#{date},
                        num=#{num},category_id=#{category_id},update_time=now(),reference_num=#{reference_num},isbn=#{isbn}
        where reference_num=#{old}
    </update>

    <update id="updateBookImg">
        update book set image=#{image}
        where reference_num=#{reference_num}
    </update>

    <insert id="addBook">
        INSERT INTO book(reference_num,book_name,author,page_num,price,isbn,detail,publisher,
                         image,`date`,category_id,update_time,num)
        VALUES(#{reference_num},#{book_name},#{author},#{page_num},#{price},#{isbn},
               #{detail},#{publisher},#{image},#{date},#{category_id},now(),#{num});
    </insert>

    <delete id="deleteBook" parameterType="String">
        delete from book where isbn=#{isbn}
    </delete>
    <delete id="deleteBookByReferenceNum" parameterType="String">
        delete from book where reference_num=#{reference_num};
        delete from bookitem where reference_num=#{reference_num};
    </delete>

    <delete id="deleteBooks" parameterType="java.lang.String" >
        DELETE FROM book WHERE isbn IN
        <foreach collection="list" item="isbn" open="(" close=")" separator=",">
            #{isbn}
        </foreach>
    </delete>

    <update id="updateBookNum">
        update book set num=(num-#{num}) where reference_num=#{reference_num}
    </update>


    <select id="getPageByYear" resultType="java.util.HashMap">
        SELECT *, (select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
        (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where 1=1
        <choose>
            <when test="year_before !=''">
                and CAST(LEFT(date,4) as SIGNED)&lt;=CAST(#{year_before} as SIGNED)
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year_after !=''">
                and CAST(LEFT(date,4) as SIGNED)&gt;=CAST(#{year_after} as SIGNED)
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by LEFT(date,4) DESC
        limit #{start},#{each_num}
    </select>

    <select id="getPageByYearCount" resultType="int">
        SELECT count(*) FROM book where 1=1
        <choose>
            <when test="year_before !=''">
                and CAST(LEFT(date,4) as SIGNED)&lt;=CAST(#{year_before} as SIGNED)
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year_after !=''">
                and CAST(LEFT(date,4) as SIGNED)&gt;=CAST(#{year_after} as SIGNED)
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="getMainPage" resultType="java.util.HashMap">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
        (select category_name from category where category.category_id=book.category_id) as second_category FROM book where 1=1
        <choose>
            <when test="category ==0">
                and LEFT(category_id,1) in ('A' ,'B','C','D','E','F','K','H','G','J')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==1">
                and LEFT(category_id,1) in ('I')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==2">
                and LEFT(category_id,1) in ('N','O','P','Q','R','S','T','U','V','X')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==3">
                and LEFT(category_id,1) in ('Z')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by LEFT(date,4) DESC
        limit #{start},#{each_num}
    </select>

    <select id="getMainPageCount" resultType="int">
        SELECT count(*) FROM book where 1=1
        <choose>
            <when test="category ==0">
                and LEFT(category_id,1) in ('A' ,'B','C','D','E','F','K','H','G','J')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==1">
                and LEFT(category_id,1) in ('I')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==2">
                and LEFT(category_id,1) in ('N','O','P','Q','R','S','T','U','V','X')
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="category ==3">
                and LEFT(category_id,1) in ('Z')
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="getNewBook" resultType="java.util.HashMap">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
            (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book
        order by LEFT(update_time,4) DESC
        limit 0,#{num}
    </select>

    <select id="fuzzyQuery" resultType="java.util.HashMap">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
        (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where 1=1
        <choose>
            <when test="queryWhat==0">
                and (book_name like #{content} or author like #{content}
                or publisher like #{content} or detail like #{content})
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==1">
                and book_name like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and author like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and publisher like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==4">
                and detail like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by LEFT(date,4) DESC
        limit #{start},#{each_num}
    </select>

    <select id="fuzzyQueryCount" resultType="int">
        SELECT count(*)
        FROM book where 1=1
        <choose>
            <when test="queryWhat==0">
                and (book_name like #{content} or author like #{content}
                or publisher like #{content} or detail like #{content})
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==1">
                and book_name like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and author like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and publisher like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==4">
                and detail like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="adminFuzzyQuery" resultType="java.util.HashMap">
        SELECT *,(select category_name from category where category.category_id=LEFT(book.category_id,1)) as main_category,
        (select category_name from category where category.category_id=book.category_id) as second_category
        FROM book where 1=1
        <choose>
            <when test="queryWhat==0">
                and (book_name like #{content} or isbn like #{content}
                or reference_num like #{content} or author like #{content} or publisher like #{content})
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==1">
                and book_name like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and isbn like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and reference_num like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==4">
                and author like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==5">
                and publisher like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by LEFT(date,4) DESC
        limit #{start},#{each_num}
    </select>

    <select id="adminFuzzyQueryCount" resultType="int">
        SELECT count(*)
        FROM book where 1=1
        <choose>
            <when test="queryWhat==0">
                and (book_name like #{content} or author like #{content}
                or publisher like #{content} or detail like #{content})
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==1">
                and book_name like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==2">
                and isbn like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==3">
                and reference_num like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==4">
                and author like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="queryWhat==5">
                and publisher like #{content}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="getBookNum" resultType="int">
        SELECT count(*) FROM book
    </select>

    <select id="getBookNumByRef" parameterType="java.lang.String" resultType="int">
        SELECT count(*) FROM bookitem where reference_num=#{reference_num}
    </select>

    <select id="getBookItemNum" resultType="int">
        SELECT count(*) FROM bookitem
    </select>

    <select id="getPageCount" resultType="int">
        SELECT count(id)
        FROM book where repertory>=0
        <choose>
            <when test="main_category_id!=''">
                and main_category_id=#{main_category_id}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test=" second_category_id!=''">
                and second_category_id=#{second_category_id}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year !=''">
                and year(print_time)=#{year}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year_before !=''">
                and year(print_time)&lt;=#{year_before}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year_after !=''">
                and year(print_time)&gt;=#{year_after}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="shop_id !=''">
                and shop_id=#{shop_id}
            </when>
            <otherwise>
            </otherwise>
        </choose>

    </select>

    <select id="getPage" resultType="java.util.HashMap">
        SELECT *,(select shop_name from shop where id=shop_id) as shop_name,
               (select category_name from main_category where id=main_category_id) as main_category,
               (select category_name from second_category where id=second_category_id) as second_category
               FROM book where repertory>=0
        <choose>
            <when test="main_id !=''">
                and main_category_id=#{main_id}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="second_id !=''">
                and second_category_id=#{second_id}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year !=''">
                and year(print_time)=#{year}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year_before !=''">
                and year(print_time)&lt;=#{year_before}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="year_after !=''">
                and year(print_time)&gt;=#{year_after}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="shop_id !=''">
                and shop_id=#{shop_id}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by
        <choose>
            <when test="style==1">
                volume DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="style==2">
                print_time DESC
            </when>
            <otherwise>
            </otherwise>
        </choose>
        limit #{start},#{book_num}
    </select>

    <update id="updateStatus" parameterType="String">
        update book set repertory=-1 where shop_id=#{shop_id}
    </update>

</mapper>